{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/dmeanli.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { ndarray as dapxsum } from '@stdlib/blas-ext-base-dapxsum';\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a double-precision floating-point strided array using a one-pass trial mean algorithm.\n*\n* ## References\n*\n* -   Ling, Robert F. 1974. \"Comparison of Several Algorithms for Computing Sample Means and Variances.\" _Journal of the American Statistical Association_ 69 (348). American Statistical Association, Taylor & Francis, Ltd.: 859–66. doi:[10.2307/2286154](https://doi.org/10.2307/2286154).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var x = new Float64Array( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = dmeanli( 4, x, 2, 1 );\n* // returns 1.25\n*/\nfunction dmeanli( N, x, strideX, offsetX ) {\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || strideX === 0 ) {\n\t\treturn x[ offsetX ];\n\t}\n\treturn x[ offsetX ] + ( dapxsum( N-1, -x[ offsetX ], x, strideX, offsetX+strideX ) / N ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default dmeanli;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a double-precision floating-point strided array using a one-pass trial mean algorithm.\n*\n* ## References\n*\n* -   Ling, Robert F. 1974. \"Comparison of Several Algorithms for Computing Sample Means and Variances.\" _Journal of the American Statistical Association_ 69 (348). American Statistical Association, Taylor & Francis, Ltd.: 859–66. doi:[10.2307/2286154](https://doi.org/10.2307/2286154).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - stride length\n* @returns {number} arithmetic mean\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var x = new Float64Array( [ 1.0, -2.0, 2.0 ] );\n*\n* var v = dmeanli( x.length, x, 1 );\n* // returns ~0.3333\n*/\nfunction dmeanli( N, x, strideX ) {\n\treturn ndarray( N, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default dmeanli;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport dmeanli from './dmeanli.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( dmeanli, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default dmeanli;\n"],"names":["dmeanli","N","x","strideX","offsetX","NaN","dapxsum","ndarray","stride2offset","setReadOnly"],"mappings":";;wUAgDA,SAASA,EAASC,EAAGC,EAAGC,EAASC,GAChC,OAAKH,GAAK,EACFI,IAEG,IAANJ,GAAuB,IAAZE,EACRD,EAAGE,GAEJF,EAAGE,GAAcE,EAASL,EAAE,GAAIC,EAAGE,GAAWF,EAAGC,EAASC,EAAQD,GAAYF,CACtF,CCRA,SAASD,EAASC,EAAGC,EAAGC,GACvB,OAAOI,EAASN,EAAGC,EAAGC,EAASK,EAAeP,EAAGE,GAClD,CCrBAM,EAAAT,EAAA,UAAAO"}